// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Settings {
  id Int @id @default(autoincrement())
  settings String
  user_id Int
  user User @relation(fields: [user_id],references: [id],onDelete: NoAction, onUpdate: NoAction)
}
model Role{
  id Int @id @default(autoincrement())
  role_name String
  User User[]
}
model User{
  id Int @id @default(autoincrement())
  name String?
  email String @unique
  password String
  avatar String?
  role_id Int @default(1)
  role Role @relation(fields: [role_id],references: [id],onDelete: NoAction, onUpdate: NoAction)
  reviews ProductReview[]
  settings Settings[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProductImages{
  id Int @id @default(autoincrement())
  product_id Int
  image_path String
  product Product @relation(fields: [product_id],references: [id], onDelete: NoAction, onUpdate: NoAction)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Product{
  id Int @id @default(autoincrement())
  name String
  price Float
  compare_price Float
  description String
  images ProductImages[]
  category_id Int
  product_attributes ProductAttributes[]
  reviews ProductReview[]

  categories_on_products CategoriesOnProducts[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Category{
  id Int @id @default(autoincrement())
  name String

  categories_on_products CategoriesOnProducts[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model CategoriesOnProducts{
  product Product @relation(fields: [product_id],references: [id],onDelete: NoAction, onUpdate: NoAction)
  product_id Int
  category Category @relation(fields: [category_id],references: [id],onDelete: NoAction, onUpdate: NoAction)
  category_id Int

  @@id([product_id,category_id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model ProductAttributes{
  id Int @id @default(autoincrement())
  product_id Int
  attribute_name  String
  attribute_value String
  product Product @relation(fields: [product_id],references: [id],onDelete: NoAction, onUpdate: NoAction)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model ProductReview{
  id Int @id @default(autoincrement())
  product_id Int 
  user_id Int
  rating Int
  review String
  product Product @relation(fields: [product_id],references: [id],onDelete: NoAction, onUpdate: NoAction)
  user User @relation(fields: [user_id],references: [id],onDelete: NoAction, onUpdate: NoAction)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}